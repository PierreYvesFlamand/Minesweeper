{"version":3,"sources":["script.js"],"names":["Grid","[object Object]","height","length","bombs","this","squares","checkWin","document","querySelector","textContent","fillEmpty","fillWithBomb","addClickEvent","grid","innerHTML","style","gridTemplateColumns","gridTemplateRows","i","j","square","createElement","classList","add","setAttribute","String","padStart","appendChild","rdm_Y","rdm_X","Math","floor","random","squareValue","undefined","node","addEventListener","e","clickEvent","numberToLetter","color","createGame","edge","updateFlagsCounter","flags","winCheck","target","flag","Number","id","slice","background","alert","curEdge","curBombs","revealSquare","spreadZero","setTimeout","forEach","pos","click","parseInt","prompt","isNaN"],"mappings":"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","sourcesContent":["class Grid {\r\n    constructor(height, length, bombs) {\r\n        this.squares = [];\r\n        this.height = height;\r\n        this.length = length;\r\n        this.bombs = bombs;\r\n\r\n        this.checkWin = this.height * this.length - this.bombs;\r\n        document.querySelector('#flags-counter-max').textContent = this.bombs;\r\n        this.fillEmpty();\r\n        this.fillWithBomb();\r\n        this.addClickEvent();\r\n    }\r\n\r\n    fillEmpty() {\r\n        const grid = document.querySelector('.grid');\r\n        grid.innerHTML = '';\r\n        grid.style.gridTemplateColumns = `repeat(${this.length}, 1fr)`;\r\n        grid.style.gridTemplateRows = `repeat(${this.height}, 1fr)`;\r\n\r\n        for (let i = 0; i < this.height; i++) {\r\n            this.squares[i] = [];\r\n\r\n            for (let j = 0; j < this.length; j++) {\r\n                this.squares[i][j] = 'O';\r\n\r\n                const square = document.createElement('div');\r\n                square.classList.add('square');\r\n                square.setAttribute('id', `grid-${String(i).padStart(2, '0')}-${String(j).padStart(2, '0')}`);\r\n                grid.appendChild(square);\r\n            }\r\n        }\r\n    }\r\n\r\n    fillWithBomb() {\r\n        let rdm_Y, rdm_X;\r\n        for (let i = 0; i < this.bombs; i++) {\r\n            do {\r\n                rdm_Y = Math.floor(Math.random() * this.height);\r\n                rdm_X = Math.floor(Math.random() * this.length);\r\n            } while (this.squares[rdm_Y][rdm_X] == 'X');\r\n\r\n            this.squares[rdm_Y][rdm_X] = 'X';\r\n        }\r\n    }\r\n\r\n    addClickEvent() {\r\n        for (let i = 0; i < this.height; i++) {\r\n            for (let j = 0; j < this.length; j++) {\r\n                if (this.squares[i][j] === 'O') {\r\n                    let squareValue = 0;\r\n\r\n                    /* \r\n                    grid[i-1][j-1]\r\n                    grid[i-1][j]\r\n                    grid[i-1][j+1] */\r\n                    if (this.squares[i - 1] !== undefined) {\r\n                        if (this.squares[i - 1][j - 1] === 'X') {\r\n                            squareValue++;\r\n                        }\r\n                        if (this.squares[i - 1][j] === 'X') {\r\n                            squareValue++;\r\n                        }\r\n                        if (this.squares[i - 1][j + 1] === 'X') {\r\n                            squareValue++;\r\n                        }\r\n                    }\r\n\r\n                    /*\r\n                    grid[i][j-1]\r\n                    grid[i][j+1]\r\n                    grid[i+1][j-1]*/\r\n                    if (this.squares[i][j - 1] === 'X') {\r\n                        squareValue++;\r\n                    }\r\n                    if (this.squares[i][j + 1] === 'X') {\r\n                        squareValue++;\r\n                    }\r\n\r\n                    /*\r\n                    grid[i+1][j-1]\r\n                    grid[i+1][j]\r\n                    grid[i+1][j+1]*/\r\n                    if (this.squares[i + 1] !== undefined) {\r\n                        if (this.squares[i + 1][j - 1] === 'X') {\r\n                            squareValue++;\r\n                        }\r\n                        if (this.squares[i + 1][j] === 'X') {\r\n                            squareValue++;\r\n                        }\r\n                        if (this.squares[i + 1][j + 1] === 'X') {\r\n                            squareValue++;\r\n                        }\r\n                    }\r\n\r\n                    this.squares[i][j] = squareValue;\r\n                }\r\n\r\n                const node = document.querySelector(\r\n                    `#grid-${String(i).padStart(2, '0')}-${String(j).padStart(2, '0')}`\r\n                );\r\n\r\n                node.addEventListener('click', function (e) {\r\n                    clickEvent(e, false);\r\n                });\r\n\r\n                node.addEventListener('contextmenu', function (e) {\r\n                    clickEvent(e, true);\r\n                });\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nconst numberToLetter = ['0', '1', '2', '3', '4', '5', '6', '7', '8'];\r\nconst color = ['#404040', 'blue', 'green', 'red', 'purple', 'purple', 'purple', 'purple', 'purple'];\r\n\r\ndocument.querySelector('#custom').addEventListener('click', () => {\r\n    let edge, bombs;\r\n\r\n    do {\r\n        edge = parseInt(prompt('Enter the length of one side of the square\\nMin: 4\\nMax: 25'));\r\n    } while (edge < 4 || edge > 25 || isNaN(edge));\r\n\r\n    do {\r\n        bombs = parseInt(prompt(`Enter the number of bombs\\nMin: ${edge * 3}\\nMax: ${edge * edge - 1}`));\r\n    } while (bombs < edge * 3 || bombs > edge * edge - 1 || isNaN(bombs));\r\n\r\n    curEdge = edge;\r\n    curBombs = bombs;\r\n    createGame(edge, bombs);\r\n});\r\n\r\nfunction createGame(edge, bombs) {\r\n    grid = new Grid(edge, edge, bombs);\r\n    flags = 0;\r\n    updateFlagsCounter(flags);\r\n    winCheck = 0;\r\n}\r\n\r\nfunction updateFlagsCounter(flags) {\r\n    document.querySelector('#flags-counter').textContent = flags;\r\n}\r\n\r\nfunction clickEvent({ target }, flag) {\r\n    const i = Number(target.id.slice(5, 7));\r\n    const j = Number(target.id.slice(8, 10));\r\n\r\n    const node = document.querySelector(`#grid-${target.id.slice(5, 7)}-${target.id.slice(8, 10)}`);\r\n\r\n    if (flag) {\r\n        if (node.textContent === '') {\r\n            node.textContent = '🚩';\r\n            node.style.background = '#8b8987';\r\n            flags++;\r\n        } else if (node.textContent === '🚩') {\r\n            node.textContent = '';\r\n            node.style.background = '#f3f3f3';\r\n            flags--;\r\n        }\r\n\r\n        updateFlagsCounter(flags);\r\n    } else {\r\n        if (node.textContent !== '🚩') {\r\n            if (grid.squares[i][j] === 'X') {\r\n                node.style.background = 'black';\r\n                alert('BOUM !!!\\nRETRY');\r\n                createGame(curEdge, curBombs);\r\n            } else {\r\n                if (node.textContent === '') {\r\n                    revealSquare(i, j);\r\n                    if (grid.squares[i][j] === 0) {\r\n                        spreadZero(i, j);\r\n                    }\r\n                }\r\n\r\n                setTimeout(() => {\r\n                    if (winCheck === grid.checkWin) {\r\n                        alert('YOU WIN !!');\r\n                        createGame(curEdge, curBombs);\r\n                    }\r\n                }, 50);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nfunction revealSquare(i, j) {\r\n    const node = document.querySelector(`#grid-${String(i).padStart(2, '0')}-${String(j).padStart(2, '0')}`);\r\n    node.textContent = numberToLetter[grid.squares[i][j]];\r\n    node.style.background = color[grid.squares[i][j]];\r\n    node.style.color = 'white';\r\n    if (grid.squares[i][j] === 0) {\r\n        node.style.color = 'transparent';\r\n    }\r\n    winCheck++;\r\n}\r\n\r\nfunction spreadZero(i, j) {\r\n    const map = [\r\n        [-1, -1],\r\n        [-1, +0],\r\n        [-1, +1],\r\n        [+0, -1],\r\n        [+0, +1],\r\n        [+1, -1],\r\n        [+1, +0],\r\n        [+1, +1],\r\n    ];\r\n\r\n    map.forEach((pos) => {\r\n        if (grid.squares[i + pos[0]] !== undefined) {\r\n            if (grid.squares[i + pos[0]][j + pos[1]] !== undefined) {\r\n                if (\r\n                    document.querySelector(\r\n                        `#grid-${String(i + pos[0]).padStart(2, '0')}-${String(j + pos[1]).padStart(2, '0')}`\r\n                    ).textContent === ''\r\n                ) {\r\n                    document\r\n                        .querySelector(\r\n                            `#grid-${String(i + pos[0]).padStart(2, '0')}-${String(j + pos[1]).padStart(\r\n                                2,\r\n                                '0'\r\n                            )}`\r\n                        )\r\n                        .click();\r\n                }\r\n            }\r\n        }\r\n    });\r\n}\r\n\r\n// First Init\r\nlet grid,\r\n    flags,\r\n    winCheck,\r\n    curEdge = 20,\r\n    curBombs = 80;\r\ncreateGame(curEdge, curBombs);\r\n\r\n// //Dev Cheat\r\n// showBombs();\r\n// function showBombs() {\r\n//     for (let i = 0; i < curEdge; i++) {\r\n//         for (let j = 0; j < curEdge; j++) {\r\n//             if (grid.squares[i][j] === 'X') {\r\n//                 document.querySelector(\r\n//                     `#grid-${String(i).padStart(2, '0')}-${String(j).padStart(2, '0')}`\r\n//                 ).style.background = 'black';\r\n//             }\r\n//         }\r\n//     }\r\n// }\r\n"],"file":"script.js"}